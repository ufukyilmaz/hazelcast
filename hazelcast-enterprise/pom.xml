<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <parent>
        <artifactId>hazelcast-enterprise-root</artifactId>
        <groupId>com.hazelcast</groupId>
        <version>3.12.1-SNAPSHOT</version>
    </parent>

    <name>Hazelcast Enterprise(Core)</name>
    <artifactId>hazelcast-enterprise</artifactId>
    <packaging>jar</packaging>

    <properties>
        <!-- needed for CheckStyle/SpotBugs -->
        <main.basedir>${project.parent.basedir}</main.basedir>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>

        <jdk.version>1.6</jdk.version>
        <target.dir>target</target.dir>
    </properties>

    <licenses>
        <license>
            <name>Commercial License</name>
            <url>http://www.hazelcast.com/licenses/LICENSE.txt</url>
            <distribution>manual</distribution>
        </license>
    </licenses>

    <organization>
        <name>Hazelcast, Inc.</name>
        <url>http://www.hazelcast.com/</url>
    </organization>

    <build>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-jar-plugin</artifactId>
                <version>${maven.jar.plugin.version}</version>
                <configuration>
                    <archive>
                        <index>true</index>
                        <compress>true</compress>
                        <manifest>
                            <mainClass>${hazelcast.serverMainClass}</mainClass>
                            <addDefaultImplementationEntries>true</addDefaultImplementationEntries>
                            <addDefaultSpecificationEntries>true</addDefaultSpecificationEntries>
                        </manifest>
                        <manifestFile>${project.build.outputDirectory}/META-INF/MANIFEST.MF</manifestFile>
                        <manifestEntries>
                            <Automatic-Module-Name>com.hazelcast.core</Automatic-Module-Name>
                        </manifestEntries>
                    </archive>
                </configuration>
            </plugin>

            <plugin>
                <groupId>org.apache.felix</groupId>
                <artifactId>maven-bundle-plugin</artifactId>
                <version>${maven.bundle.plugin.version}</version>
                <executions>
                    <execution>
                        <id>bundle-manifest</id>
                        <phase>process-classes</phase>
                        <goals>
                            <goal>manifest</goal>
                        </goals>
                        <configuration>
                            <instructions>
                                <Bundle-Activator>com.hazelcast.osgi.impl.Activator</Bundle-Activator>
                                <Export-Package>
                                    com.hazelcast.*,
                                    com.hazelcast.cache.impl.CacheEntry
                                </Export-Package>
                                <Import-Package>
                                    !org.junit,
                                    !freemarker.*,
                                    sun.misc;resolution:=optional,
                                    javax.cache;resolution:=optional,
                                    javax.cache.*;resolution:=optional,
                                    org.apache.log4j;resolution:=optional,
                                    org.apache.log4j.spi;resolution:=optional,
                                    org.apache.logging.log4j;resolution:=optional,
                                    org.apache.logging.log4j.*;resolution:=optional,
                                    org.slf4j;resolution:=optional,
                                    org.codehaus.groovy.jsr223;resolution:=optional,
                                    org.jruby.embed.jsr223;resolution:=optional,
                                    org.jclouds.*;resolution:=optional,
                                    com.google.*;resolution:=optional,
                                    sun.nio.ch;resolution:=optional,
                                    *
                                </Import-Package>
                                <Embed-Dependency>*; scope=compile|runtime</Embed-Dependency>
                                <CacheEntryImpl>com.hazelcast.cache.impl.CacheEntry</CacheEntryImpl>
                                <CacheImpl>com.hazelcast.cache.ICache</CacheImpl>
                                <CacheManagerImpl>com.hazelcast.cache.HazelcastCacheManager</CacheManagerImpl>
                            </instructions>
                        </configuration>
                    </execution>
                </executions>
            </plugin>

            <plugin>
                <groupId>pl.project13.maven</groupId>
                <artifactId>git-commit-id-plugin</artifactId>
                <version>2.1.10</version>
                <executions>
                    <execution>
                        <goals>
                            <goal>revision</goal>
                        </goals>
                    </execution>
                </executions>
                <configuration>
                    <useNativeGit>false</useNativeGit>
                    <dotGitDirectory>${project.basedir}/.git</dotGitDirectory>
                    <failOnNoGitDirectory>false</failOnNoGitDirectory>
                    <abbrevLength>7</abbrevLength>
                    <gitDescribe>
                        <skip>true</skip>
                    </gitDescribe>
                </configuration>
            </plugin>

            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-shade-plugin</artifactId>
                <version>${maven.shade.plugin.version}</version>
                <executions>
                    <execution>
                        <phase>package</phase>
                        <goals>
                            <goal>shade</goal>
                        </goals>
                        <configuration>
                            <shadedArtifactId>hazelcast-enterprise</shadedArtifactId>
                            <minimizeJar>false</minimizeJar>
                            <artifactSet>
                                <includes>
                                    <include>com.hazelcast:hazelcast</include>
                                    <include>com.hazelcast:hazelcast-enterprise</include>
                                    <include>com.hazelcast:hazelcast-enterprise-native-memory</include>
                                    <include>com.hazelcast:hazelcast-enterprise-hotrestart</include>
                                    <include>com.hazelcast.marketing:hazelcast-license-extractor</include>
                                </includes>
                            </artifactSet>
                            <filters>
                                <filter>
                                    <artifact>*:*</artifact>
                                    <excludes>
                                        <exclude>META-INF/*.SF</exclude>
                                        <exclude>META-INF/*.DSA</exclude>
                                        <exclude>META-INF/*.RSA</exclude>
                                        <!-- here we get rid of NLC mode support class -->
                                        <exclude>com/hazelcast/license/nlc/impl/${hazelcast.license.provider.exclude}.class</exclude>
                                    </excludes>
                                </filter>
                            </filters>
                            <transformers>
                                <transformer implementation="org.apache.maven.plugins.shade.resource.AppendingTransformer">
                                    <resource>META-INF/services/com.hazelcast.SerializerHook</resource>
                                </transformer>
                                <transformer implementation="org.apache.maven.plugins.shade.resource.AppendingTransformer">
                                    <resource>META-INF/services/com.hazelcast.DataSerializerHook</resource>
                                </transformer>
                                <transformer implementation="org.apache.maven.plugins.shade.resource.AppendingTransformer">
                                    <resource>META-INF/services/com.hazelcast.PortableHook</resource>
                                </transformer>
                            </transformers>
                        </configuration>
                    </execution>
                </executions>
            </plugin>

            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-resources-plugin</artifactId>
                <version>3.0.2</version>
                <executions>
                    <execution>
                        <phase>process-sources</phase>
                        <goals>
                            <goal>copy-resources</goal>
                        </goals>
                        <configuration>
                            <resources>
                                <resource>
                                    <directory>src/main/template</directory>
                                    <includes>
                                        <include>**/*.java</include>
                                    </includes>
                                    <filtering>true</filtering>
                                </resource>
                            </resources>
                            <outputDirectory>src/main/java</outputDirectory>
                            <overwrite>true</overwrite>
                        </configuration>
                    </execution>
                </executions>
            </plugin>

            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-clean-plugin</artifactId>
                <version>3.0.0</version>
                <executions>
                    <execution>
                        <phase>clean</phase>
                        <goals>
                            <goal>clean</goal>
                        </goals>
                        <configuration>
                            <filesets>
                                <fileset>
                                    <directory>src/main/java</directory>
                                    <includes>
                                        <include>**/Generated*</include>
                                    </includes>
                                </fileset>
                            </filesets>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
        </plugins>
    </build>

    <dependencies>
        <!-- netty dependencies for OpenSSL integration -->
        <dependency>
            <groupId>io.netty</groupId>
            <artifactId>${netty-tcnative.artifactId}</artifactId>
            <version>${netty-tcnative.version}</version>
            <classifier>${netty-tcnative.classifier}</classifier>
            <scope>provided</scope>
            <optional>true</optional>
        </dependency>
        <dependency>
            <groupId>io.netty</groupId>
            <artifactId>netty-buffer</artifactId>
            <version>${netty.version}</version>
            <scope>provided</scope>
            <optional>true</optional>
        </dependency>
        <dependency>
            <groupId>io.netty</groupId>
            <artifactId>netty-codec</artifactId>
            <version>${netty.version}</version>
            <scope>provided</scope>
            <optional>true</optional>
        </dependency>
        <dependency>
            <groupId>io.netty</groupId>
            <artifactId>netty-common</artifactId>
            <version>${netty.version}</version>
            <scope>provided</scope>
            <optional>true</optional>
        </dependency>
        <dependency>
            <groupId>io.netty</groupId>
            <artifactId>netty-handler</artifactId>
            <version>${netty.version}</version>
            <scope>provided</scope>
            <optional>true</optional>
        </dependency>
        <dependency>
            <groupId>io.netty</groupId>
            <artifactId>netty-resolver</artifactId>
            <version>${netty.version}</version>
            <scope>provided</scope>
            <optional>true</optional>
        </dependency>
        <dependency>
            <groupId>io.netty</groupId>
            <artifactId>netty-transport</artifactId>
            <version>${netty.version}</version>
            <scope>provided</scope>
            <optional>true</optional>
        </dependency>

        <dependency>
            <groupId>org.hamcrest</groupId>
            <artifactId>hamcrest-library</artifactId>
            <version>${hamcrest.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>com.hazelcast</groupId>
            <artifactId>hazelcast-enterprise-native-memory</artifactId>
            <version>${project.version}</version>
            <scope>compile</scope>
        </dependency>
        <dependency>
            <groupId>com.hazelcast</groupId>
            <artifactId>hazelcast-enterprise-hotrestart</artifactId>
            <version>${project.version}</version>
            <scope>compile</scope>
        </dependency>
        <dependency>
            <groupId>com.hazelcast.marketing</groupId>
            <artifactId>hazelcast-license-extractor</artifactId>
            <version>${license.extractor.version}</version>
        </dependency>
        <dependency>
            <groupId>javax.cache</groupId>
            <artifactId>cache-api</artifactId>
            <version>${jsr107.api.version}</version>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>org.apache.httpcomponents</groupId>
            <artifactId>httpclient</artifactId>
            <version>4.3.1</version>
            <scope>test</scope>
        </dependency>
        <!-- scripting protection test -->
        <dependency>
            <groupId>org.codehaus.groovy</groupId>
            <artifactId>groovy-all</artifactId>
            <version>2.1.8</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>net.spy</groupId>
            <artifactId>spymemcached</artifactId>
            <version>2.12.2</version>
            <scope>test</scope>
        </dependency>
    </dependencies>

    <profiles>
        <!-- only enable animal sniffer when running build on JDK 8 -->
        <!-- reasoning: compilation on JDK 9+ adds usages of -->
        <!-- Objects.requiresNonNull in the compiled bytecode -->
        <!-- and fails validation. -->
        <!-- Since the official builds are generated by JDK 8 -->
        <!-- it is enough to test for Java 6 compatibility -->
        <!-- with JDK 8 compiler only -->
        <profile>
            <id>animal-sniffer</id>
            <activation>
                <jdk>[1.8, 9)</jdk>
            </activation>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.codehaus.mojo</groupId>
                        <artifactId>animal-sniffer-maven-plugin</artifactId>
                        <version>${maven.animal.sniffer.plugin.version}</version>
                        <configuration>
                            <annotations>
                                <annotation>com.hazelcast.internal.RequiresJdk8</annotation>
                            </annotations>
                            <signature>
                                <groupId>org.codehaus.mojo.signature</groupId>
                                <artifactId>java16</artifactId>
                                <version>1.0</version>
                            </signature>
                            <ignores>
                                <ignore>sun.misc.Unsafe</ignore>
                            </ignores>
                        </configuration>
                        <executions>
                            <execution>
                                <id>source-java6-check</id>
                                <phase>compile</phase>
                                <goals>
                                    <goal>check</goal>
                                </goals>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>
    </profiles>
</project>
